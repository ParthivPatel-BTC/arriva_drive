- content_for(:title, 'Drive Notes')
.main-panel
  .note-panel.clearfix
    .notepanel-left
      .notepanelleft
        #noteTabs.clearfix.note-block
          .notetabs-value
            %ul.clearfix
              %li
                %a{:href => "#tabs-1"} Shared
              %li
                %a{:href => "#tabs-2"} My Notes
          .eventtabs-detail
            #tabs-1.notetabs-box
              .sharedtab-list.clearfix
                %ul
                  %li
                    .sharedtablist-box.clearfix{"data-related" => "shared1"}
                      .shared-img
                        = image_tag 'images/avtar-photo.png'
                      .shared-text
                        %h4
                          Sarah Callum
                          %span 09:34 AM
                        %p Hi Lee, Yes i am attending the event in London. See you there!
                    %a.sharedtablist-delete{:href => "#"}
                  %li
                    .sharedtablist-box.clearfix
                      .shared-img
                        = image_tag 'images/avtar-photo1.png'
                      .shared-text
                        %h4
                          Sarah Callum
                          %span 09:34 AM
                        %p Hi Lee, Yes i am attending the event in London. See you there!
                    %a.sharedtablist-delete{:href => "#"}
                  %li
                    .sharedtablist-box.group.clearfix
                      .shared-img
                        = image_tag 'images/avtar-photo1.png'
                      .shared-text
                        %h4
                          Sarah Callum
                          %span 09:34 AM
                        %p Hi Lee, Yes i am attending the event in London. See you there!
                    %a.sharedtablist-delete{:href => "#"}
            #tabs-2.eventtabs-box
              .notetab-list.clearfix
                %ul
                  - @my_notes.each_with_object(0) do |note, index|
                    %li
                      .sharedtablist-box.clearfix{"data-related" => "note#{note.id}"}
                        .shared-img
                          = image_tag note.owner.photo.url(:profile)
                        .shared-text
                          %h4
                            Event Notes
                            %span 10:34 AM
                          %p= truncate note.content, length: 70
                      = link_to '', participant_note_path(note),  class: "sharedtablist-delete", title: t('common.caption.delete'), method: :delete, data: { confirm: t('common.msg.confirm')} 
        .download-notehist
          = link_to 'Download Notes History', export_notes_path(id: current_participant.id, format: :pdf), target: 'blank', class: 'dNotehistory'
          / %a{ href: '#', target: 'blank', 'data-popup' => 'true', 'data-url' => "#{export_notes_path(id: current_participant.id, format: :pdf)}"}
          / %a.dNotehistory{:href => "#"} Download Notes History
    .notepanel-right
      .addnote-view
        %a.addnote-icon.md-trigger{"data-modal" => "modal-1", :href => "#"}
        .addnote-text
          = image_tag 'images/create-note.jpg'
      #shared1.sharemain-panel
        .notepopuphead.clearfix
          .notepopuphead-back
            %a.back-btn{:href => "#"}
          %span lan Butterfield
        .sharechat-main
          .sharechatmain
            .sharechat-box.clearfix
              .sharechat-title
                .sharechattitle-img
                  = image_tag 'images/profile-img.png'
                .sharechattitle-text
                  %h4 You
                  %p to lan Butterfield
                .sharechattitle-date
                  %p
                    10.23am
                    %span 2nd Feburary 2015
              .sharechat-text
                %p Hi again
                %p lan please can you respond to my note as soon as possible.
                %p Thanks,
                %p Lee
            .sharechat-box.clearfix
              .sharechat-title
                .sharechattitle-img
                  = image_tag 'images/avtar-photo1.png'
                .sharechattitle-text
                  %h4 You
                  %p to lan Butterfield
                .sharechattitle-date
                  %p
                    10.23am
                    %span 2nd Feburary 2015
              .sharechat-text
                %p Hi again
                %p lan please can you respond to my note as soon as possible.
                %p Thanks,
                %p Lee
            .sharechat-box.clearfix
              .sharechat-title
                .sharechattitle-img
                  = image_tag 'images/profile-img.png'
                .sharechattitle-text
                  %h4 You
                  %p to lan Butterfield
                .sharechattitle-date
                  %p
                    10.23am
                    %span 2nd Feburary 2015
              .sharechat-text
                %p Hi again
                %p lan please can you respond to my note as soon as possible.
                %p Thanks,
                %p Lee
            .sharechat-box.clearfix
              .sharechat-title
                .sharechattitle-img
                  = image_tag 'images/profile-img.png'
                .sharechattitle-text
                  %h4 You
                  %p to lan Butterfield
                .sharechattitle-date
                  %p
                    10.23am
                    %span 2nd Feburary 2015
              .sharechat-text
                %p Hi again
                %p lan please can you respond to my note as soon as possible.
                %p Thanks,
                %p Lee
        .sharechat-input
          %input{:name => "", :placeholder => "Click to reply...", :type => "text", :value => ""}/
      #note1.sharemain-panel
        .notepopuphead.clearfix
          .notepopuphead-back
            %a.back-btn{:href => "#"}
          %span lan Butterfield
        .sharechat-main
          .sharechat-box.clearfix
            .sharechat-title
              .sharechattitle-img
                = image_tag 'images/avtar-photo1.png'
              .sharechattitle-text
                %h4 You
                %p to oliver Longwood, Laura Hampstead
              .sharechattitle-date
                %p
                  10.23am
                  %span 2nd Feburary 2015
            .sharechat-text
              %p Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
        .sharechat-input
          %input{:name => "", :placeholder => "Click to reply...", :type => "text", :value => ""}/
.overlay{"data-sidebar-overlay" => ""}
#modal-1.md-modal.md-effect-5
  .md-content.notepopup-panel
    .eventpopup-title
      %h3 NEW NOTE
    .notepopup-list
      .inputnote.clearfix
        .inputnote-number 1
        %textarea{:placeholder => "Write a note..."}
      .tagsameone
        .inputnote-number 2
        .tagsameone-title
          %h3.accord-toggle
            Would you like to
            %span tag someone
            in your network?
          .tagsameone-detail.accord-div
            .accord-carousel
              %ul.owl-carousel
                %li.item
                  %input#tagsameone{:name => "", :type => "checkbox", :value => ""}/
                  %label.checkboxbtn{:for => "tagsameone"}
                    .network-img
                      = image_tag 'images/avtar-photo.png'
                    %h4 Oliver Longwood
                    %p Operations Support
                %li.item
                  %input#tagsameone2{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone2"}
                      .network-img
                        = image_tag 'images/avtar-photo1.png'
                      %h4 Anna Worth
                      %p Operations Support
                %li.item
                  %input#tagsameone3{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone3"}
                      .network-img
                        = image_tag 'images/avtar-photo.png'
                      %h4 Laura Hampstead
                      %p Operations Support
                %li.item
                  %input#tagsameone4{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone4"}
                      .network-img
                        %img{:alt => "", :src => "images/avtar-photo1.png"}/
                      %h4 Andrew Cole
                      %p Operations Support
                %li.item
                  %input#tagsameone5{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone5"}
                      .network-img
                        = image_tag 'images/avtar-photo.png'
                      %h4 Darren Sim
                      %p Operations Support
                %li.item
                  %input#tagsameone6{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone6"}
                      .network-img
                        = image_tag 'images/avtar-photo.png'
                      %h4 Kyle Walker
                      %p Operations Support
                %li.item
                  %input#tagsameone7{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone7"}
                      .network-img
                        = image_tag 'images/avtar-photo1.png'
                      %h4 Oliver Longwood
                      %p Operations Support
                %li.item
                  %input#tagsameone8{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone8"}
                      .network-img
                        = image_tag 'images/avtar-photo1.png'
                      %h4 Oliver Longwood
                      %p Operations Support
                %li.item
                  %input#tagsameone9{:name => "", :type => "checkbox", :value => ""}
                    %label.checkboxbtn{:for => "tagsameone9"}
                      .network-img
                        = image_tag 'images/avtar-photo1.png'
                      %h4 Oliver Longwood
                      %p Operations Support
      .tagsameone
        .inputnote-number 3
        .tagsameone-title
          %h3.accord-toggle
            Would you like to
            %span tag a behaviour
            related to this note?
          .behaviou-detail.accord-div
            %ul.clearfix
              - @behaviours.each do |behaviour|
              %li
                %input#behaviour{:name => "", :type => "checkbox", :value => ""}
                  %label.checkboxbtn{:for => "behaviour"} Cross-unit co-operation
      .notepopup-footer.clearfix
        %p People you have tagged will be automatically notified
        .notesend-btn
          %a{:href => "#"} Send
    %button.md-close Close
:javascript
    $(document).ready(function(){
        $('#myStathalf2').circliful();
    
    $('.recentnote-slide').bxSlider({
      auto: true,
      controls:false
    });
    
    $( "#noteTabs" ).tabs();
    $(".note-panel").click(function(){
      $(".addnote-view").addClass("close")
    });
    
    $(".sharedtablist-box").on("click", function() {
      $(".sharedtablist-box").removeClass("active");
      $(".sharemain-panel").removeClass("activeLnk");
      $(this).addClass("active");
      $("div[id=" + $(this).attr("data-related") + "]").addClass("activeLnk");
    });
    
    
    $(".accord-toggle").click(function(){
      $(".accord-div").slideUp();
      if($(this).next('.accord-div').is(':visible')){
        $(this).next('.accord-div').slideUp();
        $(this).removeClass("active");
      }
      else{
        $(this).next('.accord-div').slideDown();
        $(this).addClass("active");
      }
      
      
       var owl = $('.owl-carousel');
      owl.owlCarousel({
        margin:0,
        autoWidth:true,
        nav:true,
        items:7
        
      });
      owl.on('mousewheel', '.owl-stage', function (e) {
        if (e.deltaY>0) {
          owl.trigger('next.owl');
        } else {
          owl.trigger('prev.owl');
        }
        e.preventDefault();
      });
    });
    
    $(".notepopuphead-back .back-btn").click(function(){
      $(".sharemain-panel").removeClass("activeLnk")
    });
    model_popup();
    });
/ %section.mainsection
/   = render partial: 'participants/components/left_side_bar'
/   - if @notes.blank?
/     .contentarea
/       .pagingrow.notes
/         %span.left.countnote= pluralize(@notes.count, 'note')
/         %a.right{ href: new_participant_note_path }
/           = t('participant.caption.new_note')
/           %i.icon-notes
/       .activities
/         %ul
/           %li.notes-custom
/             .activitiesinfo
/               %h5= t('participant.notes.msg.no_notes_found')
/   - else
/     .contentarea
/       .eventssection
/         #about.nano
/           .nano-content{style: "right: -13px;", tabindex: "0"}
/             .pagingrow.notes
/               %span.left.countnote= pluralize(@notes.count, 'note')
/               = link_to(new_participant_note_path, class: 'right') do
/                 = t('participant.caption.new_note')
/                 %i.icon-notes
/             .notes-custom
/               %ul
/                 - last_month = nil
/                 - @notes.each_with_index do |note, index|
/                   %li
/                     .notes-left.notes-left-width
/                       .notesicon
/                         / %a{ href: 'javascript:void(null);' }
/                         /   %i.icon-share
/                         = link_to participant_note_path(note),  class: "confirmation", title: t('common.caption.delete'), method: :delete, data: { confirm: t('common.msg.confirm')} do
/                           %i.icon-delete
/                       .notedetails
/                         %p.uppercase
/                           %span.green AUTHOR:
/                           = note_owners_name(note)
/                         %h5
/                           %span.date= formatted_date(note.updated_at, true)
/                           &nbsp;
/                           %span.time= formatted_time_with_timezone(note.updated_at)
/                           %span.eventname= raw sanitize(simple_format(note.content), :tags => %w(br p) )
/                         %br
/                         %p.uppercase
/                           %span.green TAGS:
/                           = formatted_tags(note.tags.behaviour_tags)
/                         %p.uppercase
/                           %span.green SHARED WITH:
/                           = formatted_tags(note.tags.participants_tags)
/           .monthright.monthright-custom
/             - @notes.each_with_index do |note, index|
/               - if index == 0
/                 = link_to(t('participant.caption.present'))
/                 - last_month = note_creation_month(note)
/               - else
/                 - month = note_creation_month(note)
/                 - if last_month != month
/                   - last_month = month
/                   = link_to last_month
/         %br/
/         %a{ href: '#', target: 'blank', 'data-popup' => 'true', 'data-url' => "#{export_notes_path(id: current_participant.id, format: :pdf)}"}
/           %i.icon-downloadnote
/           %div{style: "float: right; margin-right: 189px; padding-top: 7px;"} DOWNLOAD NOTES HISTORY

/   = render partial: 'participants/components/right_side_bar'

/ - if @note && @points_earned.present? && @points_earned > 0
/   #new-note-dialog-box
/     %span#new-note-msg
/       Well done, you have received
/       = @points_earned
/       points for the Leadership Behaviours (
/       = formatted_tags_with_and(@note.tags.behaviour_tags)
/       ) that you have tagged with this note.

